type: spec.insomnia.rest/5.0
name: Spec
meta:
  id: wrk_dd5d5c99475648edb803f81a8c6bb39b
  created: 1752027402186
  modified: 1752027402186
  description: ""
collection:
  - name: products
    meta:
      id: fld_250b72420712408383ebd17be876f361
      created: 1752027508499
      modified: 1752027508499
      sortKey: -1752027508499
      description: ""
    children:
      - url: "{{ _.base_url }}/products"
        name: List all products
        meta:
          id: req_67216ad1a28542f39c383f33e2934674
          created: 1752027508500
          modified: 1752027508500
          isPrivate: false
          description: List all products
          sortKey: -1752027508500
        method: GET
        scripts:
          preRequest: ""
          afterResponse: ""
        settings:
          renderRequestBody: true
          encodeUrl: true
          followRedirects: global
          cookies:
            send: true
            store: true
          rebuildPath: true
    scripts:
      afterResponse: ""
      preRequest: ""
  - url: "{{ _.base_url }}/orders/{{ _.id }}"
    name: Get an order by ID
    meta:
      id: req_0e942022033743cfbbed1799ae3e3767
      created: 1752027508500
      modified: 1752027508500
      isPrivate: false
      description: ""
      sortKey: -1752027508500
    method: GET
    scripts:
      preRequest: ""
      afterResponse: ""
    settings:
      renderRequestBody: true
      encodeUrl: true
      followRedirects: global
      cookies:
        send: true
        store: true
      rebuildPath: true
  - url: "{{ _.base_url }}/orders"
    name: Create an order (max 5 items)
    meta:
      id: req_275011f9d7904ed0843dda6a2cb78d50
      created: 1752027508500
      modified: 1752027508500
      isPrivate: false
      description: ""
      sortKey: -1752027508500
    method: POST
    body:
      mimeType: application/json
      text: |-
        {
          "productIds": [
            0
          ]
        }
    headers:
      - name: Content-Type
        value: application/json
    scripts:
      preRequest: ""
      afterResponse: ""
    settings:
      renderRequestBody: true
      encodeUrl: true
      followRedirects: global
      cookies:
        send: true
        store: true
      rebuildPath: true
  - url: "{{ _.base_url }}/orders"
    name: List all orders
    meta:
      id: req_3579bfd6dc3a43789850b1f1e3f50573
      created: 1752027508500
      modified: 1752027508500
      isPrivate: false
      description: ""
      sortKey: -1752027508500
    method: GET
    parameters:
      - name: order_id
        value: "0"
        disabled: true
    scripts:
      preRequest: ""
      afterResponse: ""
    settings:
      renderRequestBody: true
      encodeUrl: true
      followRedirects: global
      cookies:
        send: true
        store: true
      rebuildPath: true
  - url: "{{ _.base_url }}/orders/{{ _.id }}"
    name: Cancel an order
    meta:
      id: req_144fbc7286ce4148b59d1c9b50f5b072
      created: 1752027508501
      modified: 1752027508501
      isPrivate: false
      description: ""
      sortKey: -1752027508501
    method: DELETE
    scripts:
      preRequest: ""
      afterResponse: ""
    settings:
      renderRequestBody: true
      encodeUrl: true
      followRedirects: global
      cookies:
        send: true
        store: true
      rebuildPath: true
cookieJar:
  name: Default Jar
  meta:
    id: jar_658008c5d21ba05e592e0919c37953ab8ac0a85a
    created: 1752027402191
    modified: 1752027402191
environments:
  name: Base Environment
  meta:
    id: env_658008c5d21ba05e592e0919c37953ab8ac0a85a
    created: 1752027402190
    modified: 1752027508498
    isPrivate: false
  data:
    base_url: "{{ _.scheme }}://{{ _.host }}{{ _.base_path }}"
  subEnvironments:
    - name: OpenAPI env localhost:3000
      meta:
        id: env_e178ee629e544fed8a588f69aa4c21c5
        created: 1752027508499
        modified: 1752027508499
        isPrivate: false
        sortKey: 1752027508499
      data:
        scheme: http
        base_path: ""
        host: localhost:3000
spec:
  contents:
    openapi: 3.0.3
    info:
      title: Fake Store API
      description: Fake store API
      version: 1.0.0
      contact:
        name: API Support
        url: https://www.example.com/support
        email: support@example.com
    servers:
      - url: http://localhost:3000
    paths:
      /products:
        parameters:
          - name: product-category
            in: query
            description: Filter by product ID
            required: false
            schema:
              type: string
        get:
          summary: List all products
          operationId: ListProducts
          description: List all products
          tags:
            - products
          responses:
            "200":
              description: List of products
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      $ref: "#/components/schemas/Product"
      /orders:
        get:
          summary: List all orders
          parameters:
            - name: order_id
              in: query
              description: Filter by order ID
              required: false
              schema:
                type: integer
          responses:
            "200":
              description: List of orders
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      $ref: "#/components/schemas/Order"
        post:
          summary: Create an order (max 5 items)
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - productIds
                  properties:
                    productIds:
                      type: array
                      items:
                        type: integer
          responses:
            "201":
              description: Order created
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/Order"
            "400":
              description: Invalid request
      /orders/{id}:
        get:
          summary: Get an order by ID
          parameters:
            - name: id
              in: path
              required: true
              schema:
                type: integer
          responses:
            "200":
              description: Order detail
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/Order"
            "404":
              description: Order not found
        delete:
          summary: Cancel an order
          parameters:
            - name: id
              in: path
              required: true
              schema:
                type: integer
          responses:
            "204":
              description: Order cancelled
            "404":
              description: Order not found
    components:
      schemas:
        Product:
          type: object
          required:
            - id
            - name
            - category
            - price
          properties:
            id:
              type: integer
            name:
              type: string
            category:
              type: string
            price:
              type: number
        Order:
          type: object
          required:
            - id
            - productIds
            - status
          properties:
            id:
              type: integer
            productIds:
              type: array
              items:
                type: integer
            status:
              type: string
              enum:
                - active
                - cancelled
    tags:
      - name: products
  meta:
    id: spc_2799f5abe0f34d468a0168cfe317b164
    created: 1752027402190
    modified: 1752028779303
testSuites:
  - name: New Suite
    meta:
      id: uts_59c7f2811da54b71b667fa4fa8f9ed79
      created: 1752027501494
      modified: 1752027501494
      sortKey: -1752027501494
    tests:
      - name: Returns 2011
        meta:
          id: ut_524cee6973da4ae9b792c9c29918daf6
          created: 1752027736857
          modified: 1752027994930
          sortKey: -1752027850864
        requestId: req_67216ad1a28542f39c383f33e2934674
        code: |-
          const response1 = await insomnia.send();
          expect(response1.status).to.equal(200);
      - name: Returns 200
        meta:
          id: ut_5593232190194f189024d8c277815352
          created: 1752027812401
          modified: 1752027990830
          sortKey: -1752027812401
        requestId: req_3579bfd6dc3a43789850b1f1e3f50573
        code: |-
          const response1 = await insomnia.send();
          expect(response1.status).to.equal(200);
      - name: Returns 200
        meta:
          id: ut_b81bff6e996740f1a145f4528ed3d39e
          created: 1752027850863
          modified: 1752027889544
          sortKey: -1752027812400
        requestId: req_0e942022033743cfbbed1799ae3e3767
        code: |-
          const response1 = await insomnia.send();
          expect(response1.status).to.equal(200);
