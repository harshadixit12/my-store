openapi: 3.0.3
info:
  title: Fake Store API
  description: Fake store API
  version: 1.0.0
  contact:
    name: API Support
    url: https://www.example.com/support
    email: support@example.com
servers:
  - url: http://localhost:3000
paths:
  /products:
    parameters:
    - name: product-category
      in: query
      description: Filter by product ID
      required: false
      schema:
        type: string
    get:
      summary: List all products
      operationId: ListProducts
      description: List all products
      tags:
      - products
      responses:
        '200':
          description: List of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'

  /orders:
    get:
      summary: List all orders
      parameters:
        - name: order_id
          in: query
          description: Filter by order ID
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: List of orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'

    post:
      summary: Create an order (max 5 items)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [productIds]
              properties:
                productIds:
                  type: array
                  items:
                    type: integer
      responses:
        '201':
          description: Order created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid request

  /orders/{id}:
    get:
      summary: Get an order by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Order detail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: Order not found

    delete:
      summary: Cancel an order
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Order cancelled
        '404':
          description: Order not found

components:
  schemas:
    Product:
      type: object
      required: [id, name, category, price]
      properties:
        id:
          type: integer
        name:
          type: string
        category:
          type: string
        price:
          type: number

    Order:
      type: object
      required: [id, productIds, status]
      properties:
        id:
          type: integer
        productIds:
          type: array
          items:
            type: integer
        status:
          type: string
          enum: [active, cancelled]
tags:
- name: products