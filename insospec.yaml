type: spec.insomnia.rest/5.0
name: spec
meta:
  id: wrk_2de023313308428d9ca9f1100e610332
  created: 1752032651287
  modified: 1752032651287
  description: ""
collection:
  - name: products
    meta:
      id: fld_f9eed80183aa4e2d9d7add9bfc84acd5
      created: 1752032701068
      modified: 1752032701068
      sortKey: -1752032701068
      description: ""
    children:
      - url: "{{ _.base_url }}/products"
        name: List all products
        meta:
          id: req_07191cfbdff04a8ebc3fce52ef84dbd4
          created: 1752032701068
          modified: 1752032701068
          isPrivate: false
          description: List all products
          sortKey: -1752032701068
        method: GET
        settings:
          renderRequestBody: true
          encodeUrl: true
          followRedirects: global
          cookies:
            send: true
            store: true
          rebuildPath: true
  - url: "{{ _.base_url }}/orders/{{ _.id }}"
    name: Get an order by ID
    meta:
      id: req_2eeb34ffa1024656adf519a671430433
      created: 1752032701069
      modified: 1752032701069
      isPrivate: false
      description: ""
      sortKey: -1752032701069
    method: GET
    settings:
      renderRequestBody: true
      encodeUrl: true
      followRedirects: global
      cookies:
        send: true
        store: true
      rebuildPath: true
  - url: "{{ _.base_url }}/orders"
    name: Create an order (max 5 items)
    meta:
      id: req_30695acecb914be0978bf46658573382
      created: 1752032701069
      modified: 1752032701069
      isPrivate: false
      description: ""
      sortKey: -1752032701069
    method: POST
    body:
      mimeType: application/json
      text: |-
        {
          "productIds": [
            0
          ]
        }
    headers:
      - name: Content-Type
        disabled: false
        value: application/json
    settings:
      renderRequestBody: true
      encodeUrl: true
      followRedirects: global
      cookies:
        send: true
        store: true
      rebuildPath: true
  - url: "{{ _.base_url }}/orders"
    name: List all orders
    meta:
      id: req_90f37c54e7784595904055732c8f90d2
      created: 1752032701069
      modified: 1752032701069
      isPrivate: false
      description: ""
      sortKey: -1752032701069
    method: GET
    parameters:
      - name: order_id
        disabled: true
        value: "0"
    settings:
      renderRequestBody: true
      encodeUrl: true
      followRedirects: global
      cookies:
        send: true
        store: true
      rebuildPath: true
  - url: "{{ _.base_url }}/orders/{{ _.id }}"
    name: Cancel an order
    meta:
      id: req_29403c6d1b514757a0888262d840f5b9
      created: 1752032701070
      modified: 1752032701070
      isPrivate: false
      description: ""
      sortKey: -1752032701070
    method: DELETE
    settings:
      renderRequestBody: true
      encodeUrl: true
      followRedirects: global
      cookies:
        send: true
        store: true
      rebuildPath: true
cookieJar:
  name: Default Jar
  meta:
    id: jar_5c94dd61e47951ccac6ff7ec022d6ad4e289df2a
    created: 1752032651290
    modified: 1752032651290
environments:
  name: Base Environment
  meta:
    id: env_5c94dd61e47951ccac6ff7ec022d6ad4e289df2a
    created: 1752032651290
    modified: 1752032701067
    isPrivate: false
  data:
    base_url: "{{ _.scheme }}://{{ _.host }}{{ _.base_path }}"
  subEnvironments:
    - name: specenv
      meta:
        id: env_2b8c8bb89e974680aa8c6ee45aac8f69
        created: 1752032701068
        modified: 1752032717768
        isPrivate: false
        sortKey: 1752032701068
      data:
        scheme: http
        base_path: ""
        host: localhost:3000
spec:
  contents:
    openapi: 3.0.3
    info:
      title: Fake Store API
      description: Fake store API
      version: 1.0.0
      contact:
        name: API Support
        url: https://www.example.com/support
        email: support@example.com
    servers:
      - url: http://localhost:3000
    paths:
      /products:
        parameters:
          - name: product-category
            in: query
            description: Filter by product ID
            required: false
            schema:
              type: string
        get:
          summary: List all products
          operationId: ListProducts
          description: List all products
          tags:
            - products
          responses:
            "200":
              description: List of products
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      $ref: "#/components/schemas/Product"
      /orders:
        get:
          summary: List all orders
          parameters:
            - name: order_id
              in: query
              description: Filter by order ID
              required: false
              schema:
                type: integer
          responses:
            "200":
              description: List of orders
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      $ref: "#/components/schemas/Order"
        post:
          summary: Create an order (max 5 items)
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - productIds
                  properties:
                    productIds:
                      type: array
                      items:
                        type: integer
          responses:
            "201":
              description: Order created
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/Order"
            "400":
              description: Invalid request
      /orders/{id}:
        get:
          summary: Get an order by ID
          parameters:
            - name: id
              in: path
              required: true
              schema:
                type: integer
          responses:
            "200":
              description: Order detail
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/Order"
            "404":
              description: Order not found
        delete:
          summary: Cancel an order
          parameters:
            - name: id
              in: path
              required: true
              schema:
                type: integer
          responses:
            "204":
              description: Order cancelled
            "404":
              description: Order not found
    components:
      schemas:
        Product:
          type: object
          required:
            - id
            - name
            - category
            - price
          properties:
            id:
              type: integer
            name:
              type: string
            category:
              type: string
            price:
              type: number
        Order:
          type: object
          required:
            - id
            - productIds
            - status
          properties:
            id:
              type: integer
            productIds:
              type: array
              items:
                type: integer
            status:
              type: string
              enum:
                - active
                - cancelled
    tags:
      - name: products
  meta:
    id: spc_df7bddfbd1b240deb4e79dd859c5c059
    created: 1752032651289
    modified: 1752032678276
