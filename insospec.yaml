type: spec.insomnia.rest/5.0
name: spec
meta:
  id: wrk_2de023313308428d9ca9f1100e610332
  created: 1752032651287
  modified: 1752032651287
  description: ""
collection:
  - name: products
    meta:
      id: fld_a2afbdafbf924b2f9958f4284ebc1426
      created: 1752290050195
      modified: 1752290241913
      sortKey: -1752290050195
      description: ""
    children:
      - url: "{{ _.base_url }}/products"
        name: List all products
        meta:
          id: req_b51eb9ca16d5442a8c955465b9d1ea90
          created: 1752290050195
          modified: 1752290050195
          isPrivate: false
          description: List all products
          sortKey: -1752290050195
        method: GET
        settings:
          renderRequestBody: true
          encodeUrl: true
          followRedirects: global
          cookies:
            send: true
            store: true
          rebuildPath: true
      - url: "{{ _.base_url }}/products/1"
        name: Get product by ID
        meta:
          id: req_60b0426993d448a08a503874024608be
          created: 1752290050196
          modified: 1752290215327
          isPrivate: false
          description: Loads product given its ID
          sortKey: -1752290050196
        method: GET
        scripts:
          afterResponse: >+
            
            insomnia.test('Check if status is 200', () => {
                insomnia.expect(insomnia.response.code).to.eql(200);
            });


            insomnia.test('Contents', ()=>{
            	const jsonBody = insomnia.response.json();
            	insomnia.expect(jsonBody ).to.be.an('object').that.has.all.keys('id', 'name', 'price', 'category');
            })



        settings:
          renderRequestBody: true
          encodeUrl: true
          followRedirects: global
          cookies:
            send: true
            store: true
          rebuildPath: true
  - name: orders
    meta:
      id: fld_b1b7d6c9b1f64b1589300adcd4a56238
      created: 1752290050195
      modified: 1752290050195
      sortKey: -1752290050195
      description: ""
    children:
      - url: "{{ _.base_url }}/orders"
        name: List all orders
        meta:
          id: req_8438faaa5eb2438b9828a0ce81c7681e
          created: 1752290050196
          modified: 1752290050196
          isPrivate: false
          description: Retrieve all orders. Optionally filter by `order_id` to get a
            specific order.
          sortKey: -1752290050196
        method: GET
        parameters:
          - name: order_id
            disabled: true
            value: "0"
        settings:
          renderRequestBody: true
          encodeUrl: true
          followRedirects: global
          cookies:
            send: true
            store: true
          rebuildPath: true
      - url: "{{ _.base_url }}/orders"
        name: Create an order
        meta:
          id: req_cfa23222e78e47bd9c3c63651271765d
          created: 1752290050196
          modified: 1752290317577
          isPrivate: false
          description: Creates a new order with the given product IDs. Maximum of 5
            products allowed.
          sortKey: -1752290050196
        method: POST
        body:
          mimeType: application/json
          text: |-
            {
              "productIds": [
                1
              ]
            }
        headers:
          - name: Content-Type
            disabled: false
            value: application/json
        settings:
          renderRequestBody: true
          encodeUrl: true
          followRedirects: global
          cookies:
            send: true
            store: true
          rebuildPath: true
cookieJar:
  name: Default Jar
  meta:
    id: jar_5c94dd61e47951ccac6ff7ec022d6ad4e289df2a
    created: 1752032651290
    modified: 1752290241912
environments:
  name: Base Environment
  meta:
    id: env_5c94dd61e47951ccac6ff7ec022d6ad4e289df2a
    created: 1752032651290
    modified: 1752290241913
    isPrivate: false
  data:
    base_url: "{{ _.scheme }}://{{ _.host }}{{ _.base_path }}"
  subEnvironments:
    - name: development
      meta:
        id: env_baf3ed4e9b1e460a8d6a29f90ae8ddec
        created: 1752290050194
        modified: 1752290241912
        isPrivate: false
        sortKey: 1752290050194
      data:
        scheme: http
        base_path: ""
        host: localhost:3000
spec:
  contents:
    openapi: 3.0.3
    info:
      title: Fake Store API
      description: Fake store API
      version: 1.0.0
      contact:
        name: API Support
        url: https://www.example.com/support
        email: support@example.com
    servers:
      - url: http://localhost:3000
        description: Development Environment
    paths:
      /products:
        parameters:
          - name: product-category
            in: query
            description: Filter by product ID
            required: false
            schema:
              type: string
        get:
          summary: List all products
          operationId: ListProducts
          description: List all products
          tags:
            - products
          responses:
            "200":
              description: List of products
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      $ref: "#/components/schemas/Product"
      /products/{productId}:
        parameters:
          - name: productId
            in: path
            description: ID of the product
            required: true
            schema:
              type: integer
        get:
          summary: Get product by ID
          operationId: GetProductByID
          description: Loads product given its ID
          tags:
            - products
          responses:
            "200":
              description: Product
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/Product"
      /orders:
        get:
          summary: List all orders
          operationId: ListOrders
          tags:
            - orders
          description: Retrieve all orders. Optionally filter by `order_id` to get a
            specific order.
          parameters:
            - name: order_id
              in: query
              description: Filter by order ID
              required: false
              schema:
                type: integer
          responses:
            "200":
              description: List of orders
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      $ref: "#/components/schemas/Order"
        post:
          summary: Create an order
          operationId: CreateOrder
          tags:
            - orders
          description: Creates a new order with the given product IDs. Maximum of 5
            products allowed.
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - productIds
                  properties:
                    productIds:
                      type: array
                      items:
                        type: integer
          responses:
            "201":
              description: Order created
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/Order"
            "400":
              description: Invalid request
    components:
      schemas:
        Product:
          type: object
          required:
            - id
            - name
            - category
            - price
          properties:
            id:
              type: integer
            name:
              type: string
            category:
              type: string
            price:
              type: number
        Order:
          type: object
          required:
            - id
            - productIds
            - status
          properties:
            id:
              type: integer
            productIds:
              type: array
              items:
                type: integer
            status:
              type: string
              enum:
                - active
                - cancelled
    tags:
      - name: products
      - name: orders
  meta:
    id: spc_df7bddfbd1b240deb4e79dd859c5c059
    created: 1752032651289
    modified: 1752290027080
testSuites:
  - name: place an order
    meta:
      id: uts_2394d682082e44d7b4e1bf2715f2bb36
      created: 1752290270618
      modified: 1752290276344
      sortKey: -1752290270618
    tests:
      - name: List proucts
        meta:
          id: ut_0766d3db9324439393b2741551da2f59
          created: 1752290279268
          modified: 1752290288977
          sortKey: -1752290279268
        requestId: req_b51eb9ca16d5442a8c955465b9d1ea90
        code: |-
          const response1 = await insomnia.send();
          expect(response1.status).to.equal(200);
      - name: place an order
        meta:
          id: ut_6f2db2aa93bb4319aa52e75bf0e5e099
          created: 1752290295887
          modified: 1752290392694
          sortKey: -1752290279267
        requestId: req_cfa23222e78e47bd9c3c63651271765d
        code: |-
          const response1 = await insomnia.send();
          expect(response1.status).to.equal(201);
      - name: verify order is placed
        meta:
          id: ut_c5845be5424a4e6998689424e6862a13
          created: 1752290325118
          modified: 1752290377848
          sortKey: -1752290279266
        requestId: req_8438faaa5eb2438b9828a0ce81c7681e
        code: |-
          const response1 = await insomnia.send();
          expect(response1.status).to.equal(200);

          expect(JSON.parse(response1.data).length).to.eql(1)
